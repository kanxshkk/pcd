nfa = [
    9,# 0
    ['1','2','3','4','5','6','7','8','9','10','11'],  # array of states 1
    2,  # number of alphabets 2 
    ['a', 'b'],  # ip 3 
    '1',  # start state 4 
    1,  # number of final states 5 
    ['11'],  # final states 6
    13, #7
    [['1','e','2'],['1','e','8'],['2','e','3'],['2','e','5'],
     ['3','a','4'],['5','b','6'],['4','e','7'],['6','e','7'],
     ['7','e','2'],['7','e','8'],['8','a','9'],['9','b','10'],['10','b','11'],
     ]

]

def Eclosure(q1):
    ecol=set()
    ecol.add(q1)
    for i in range(nfa[7]):
        for j in range(nfa[7]):
            
            if (nfa[8][j][0]==q1 or nfa[8][j][0] in ecol) and nfa[8][j][1]=="e":
                #print(ecol,nfa[8][j][0],nfa[8][j][2])
                ecol.add(nfa[8][j][2])
    return ecol

epsilon_closure = dict()

for x in nfa[1]:#states
    epsilon_closure[x] = Eclosure(x)
#print(epsilon_closure)

def ec(states):
    ans=set()
    for i in states:
        ans= ans.union(epsilon_closure[i])
    return ans

def move(states,ip):
    union_op=set()
    for state in states:
        op=set()
        ec_state = epsilon_closure[state]
        for i in range(nfa[7]):
            if nfa[8][i][0] in ec_state and nfa[8][i][1]==ip:
                op.add(nfa[8][i][2])
        union_op=union_op.union(op)
    return union_op

start_state = epsilon_closure[nfa[4]]

current_dfa = [start_state,]

'''
move(start_state,"a")
ec(move(start_state,'a'))
'''  

for state in current_dfa:
    for ip in nfa[3]:
        ans= ec(move(state,ip))
        print(state,ip,ans)
        if ans not in current_dfa:
            current_dfa.append(ans)
        
    
